version: '3.8'

services:
  # Core Database Service
  postgres:
    image: postgres:15-alpine
    container_name: invoice_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-invoice_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - invoice_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: invoice_backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres123}@postgres:5432/${POSTGRES_DB:-invoice_db}
      - FLASK_ENV=${FLASK_ENV:-development}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwt-secret-key}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - invoice_network
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads

  # AI Chatbot Service
  chatbot:
    build:
      context: ./chatbot
      dockerfile: Dockerfile
    container_name: invoice_chatbot
    restart: unless-stopped
    environment:
      - FLASK_ENV=${FLASK_ENV:-development}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BACKEND_API_URL=http://backend:5000
    ports:
      - "5001:5001"
    depends_on:
      - backend
    networks:
      - invoice_network
    volumes:
      - ./chatbot:/app

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: invoice_frontend
    restart: unless-stopped
    ports:
      - "5174:5174"
    depends_on:
      - backend
      - chatbot
    networks:
      - invoice_network
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - VITE_API_BASE_URL=http://localhost:5000
      - VITE_CHATBOT_URL=http://localhost:5001

networks:
  invoice_network:
    driver: bridge

volumes:
  postgres_data:
  backend_uploads:
  frontend_node_modules: