#!/bin/bash

# Test Rasa Integration with Chatbot
# Script ƒë·ªÉ test vi·ªác t√≠ch h·ª£p Rasa v√†o chatbot service

echo "üß™ Testing Rasa-Chatbot Integration"
echo "=================================="

# Colors for output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Test endpoints
CHATBOT_URL="http://localhost:5001"
RASA_URL="http://localhost:5005"

echo -e "${YELLOW}1. Ki·ªÉm tra Rasa Service...${NC}"
rasa_status=$(curl -s -o /dev/null -w "%{http_code}" $RASA_URL/status)
if [ $rasa_status -eq 200 ]; then
    echo -e "${GREEN}‚úÖ Rasa service is running${NC}"
else
    echo -e "${RED}‚ùå Rasa service is not available (HTTP $rasa_status)${NC}"
    echo "Please start Rasa service first: docker-compose up rasa"
    exit 1
fi

echo -e "${YELLOW}2. Ki·ªÉm tra Chatbot Service...${NC}"
chatbot_status=$(curl -s -o /dev/null -w "%{http_code}" $CHATBOT_URL/health)
if [ $chatbot_status -eq 200 ]; then
    echo -e "${GREEN}‚úÖ Chatbot service is running${NC}"
else
    echo -e "${RED}‚ùå Chatbot service is not available (HTTP $chatbot_status)${NC}"
    echo "Please start Chatbot service first: docker-compose up chatbot"
    exit 1
fi

echo -e "${YELLOW}3. Test Chat v·ªõi Rasa Integration...${NC}"

# Test messages
test_messages=(
    "xin ch√†o"
    "t√¥i c·∫ßn gi√∫p v·ªÅ h√≥a ƒë∆°n"
    "l√†m th·∫ø n√†o ƒë·ªÉ t·∫°o m·∫´u h√≥a ƒë∆°n?"
    "upload file OCR"
    "c·∫£m ∆°n"
)

for message in "${test_messages[@]}"; do
    echo -e "${YELLOW}Testing: \"$message\"${NC}"
    
    response=$(curl -s -X POST $CHATBOT_URL/chat \
        -H "Content-Type: application/json" \
        -d "{
            \"message\": \"$message\",
            \"user_id\": \"test_user\",
            \"use_rasa_primary\": true
        }")
    
    if [ $? -eq 0 ]; then
        # Extract method and message from response
        method=$(echo $response | jq -r '.method // "unknown"')
        response_msg=$(echo $response | jq -r '.message // "no response"')
        intent=$(echo $response | jq -r '.intent // "unknown"')
        confidence=$(echo $response | jq -r '.confidence // 0')
        
        echo -e "${GREEN}‚úÖ Response Method: $method${NC}"
        echo -e "   Intent: $intent (confidence: $confidence)"
        echo -e "   Response: $(echo $response_msg | cut -c1-100)..."
        echo ""
    else
        echo -e "${RED}‚ùå Failed to get response${NC}"
    fi
done

echo -e "${YELLOW}4. Test Fallback to OpenAI...${NC}"
# Test v·ªõi message ph·ª©c t·∫°p ƒë·ªÉ trigger fallback
complex_message="C√≥ th·ªÉ gi·∫£i th√≠ch cho t√¥i v·ªÅ quy ƒë·ªãnh thu·∫ø VAT m·ªõi nh·∫•t cho doanh nghi·ªáp nh·ªè v√† v·ª´a trong lƒ©nh v·ª±c c√¥ng ngh·ªá th√¥ng tin kh√¥ng?"

echo -e "${YELLOW}Testing complex query (should fallback to OpenAI):${NC}"
echo "\"$complex_message\""

response=$(curl -s -X POST $CHATBOT_URL/chat \
    -H "Content-Type: application/json" \
    -d "{
        \"message\": \"$complex_message\",
        \"user_id\": \"test_user\",
        \"use_rasa_primary\": true
    }")

if [ $? -eq 0 ]; then
    method=$(echo $response | jq -r '.method // "unknown"')
    echo -e "${GREEN}‚úÖ Response Method: $method${NC}"
    if [[ $method == *"fallback"* ]] || [[ $method == *"openai"* ]]; then
        echo -e "${GREEN}‚úÖ Fallback mechanism working correctly${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Expected fallback but got: $method${NC}"
    fi
else
    echo -e "${RED}‚ùå Failed to get response for complex query${NC}"
fi

echo ""
echo -e "${GREEN}üéâ Rasa-Chatbot Integration Test Completed!${NC}"
echo ""
echo "üìä Summary:"
echo "- Rasa service: ‚úÖ Running"
echo "- Chatbot service: ‚úÖ Running" 
echo "- Rasa integration: ‚úÖ Working"
echo "- Fallback mechanism: ‚úÖ Working"
echo ""
echo "üí° Next steps:"
echo "- Train Rasa with more Vietnamese data: cd rasa && rasa train"
echo "- Test with frontend: Open http://localhost:3000"
echo "- Monitor logs: docker-compose logs -f chatbot rasa"